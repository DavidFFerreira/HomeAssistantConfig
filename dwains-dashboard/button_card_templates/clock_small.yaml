# https://github.com/troinine/hass-config/blob/main/button_card_templates/troinine/clock.yaml
clock_small:
  variables:
    entity_weather: false
    entity_date: false
    entity_temperature: false
  show_name: false
  show_icon: false
  show_state: true
  show_label: false
  show_last_changed: false
  entity: sensor.time
  custom_fields:
    weather:
      card:
        type: custom:button-card
        show_state: false
        show_icon: false
        show_label: false
        show_name: false
        show_entity_picture: true
        # tap_action: !include ../../popups/common/weather-forecast.yaml
        entity: "[[[ return variables.entity_weather ]]]"
        entity_picture: "[[[ return `/local/weather/${states[variables.entity_weather].state}.svg` ]]]"
        styles:
          grid:
            - grid-template-areas: |
                "i"
            - grid-template-columns: 1fr
            - grid-template-rows: 1fr
          img_cell:
            - justify-content: center
          icon:
            - width: 4.0rem
            - height: 3.5rem
          card:
            - background-color: transparent
            - box-shadow: none
    temp:
      card:
        type: custom:button-card
        show_state: true
        show_icon: false
        show_label: false
        show_name: false
        entity: |
          [[[
            if (variables.entity_temperature) {
              return variables.entity_temperature
            } else if (variables.entity_weather) {
              return variables.entity_weather
            } else {
              return undefined
            }
          ]]]
        state_display: |
          [[[
            var temperature = states[variables.entity_weather].attributes.temperature
            if (variables.entity_temperature) {
              temperature = states[variables.entity_temperature].state
            }
            return `<div><span class="value">${temperature}</span><span class="unit">&degC</span></div>`
          ]]]
        extra_styles: |
          span.unit {
            font-size: 1.4rem;
          }
        styles:
          grid:
            - grid-template-areas: |
                "s"
            - grid-template-columns: 1fr
            - grid-template-rows: 1fr
          state:
            - justify-self: center
            - align-self: center
            - font-weight: 300
            - font-size: 2rem
            - filter: "opacity(40%)"
          card:
            - background-color: transparent
            - box-shadow: none
    date:
      card:
        type: custom:button-card
        show_state: true
        show_icon: false
        show_label: false
        show_name: false
        entity: "[[[ return variables.entity_date ]]]"
        state_display: |
          [[[
            if (variables.entity_date) {
              var date = variables.entity_date.state
              var lang = navigator.language || navigator.userLanguage
              const opts = { weekday: 'long', month: 'long', day: 'numeric' }
              return new Intl.DateTimeFormat(lang, opts).format(date)
            }
            return ''
          ]]]
        styles:
          grid:
            - grid-template-areas: |
                "s"
            - grid-template-columns: min-content
            - grid-template-rows: min-content
          state:
            - background-color: transparent
            - font-size: 1.2rem
            - justify-self: end
            - align-self: start
            - filter: "opacity(40%)"
          card:
            - border-radius: 0
            - background-color: transparent
            - box-shadow: none
            - padding: 0 1rem 0 0
            - border-right: 0.1rem solid rgba(205, 217, 229, 0.4)
            - justify-self: end
  styles:
    grid:
      - grid-template-areas: |
          "i n temp weather"
          "i l temp weather"
      - grid-template-columns: min-content 1.75fr 1fr auto
      - grid-template-rows: repeat(2, min-content)
    custom_fields:
      weather:
        - place-self: center start
        - margin-left: 0.8rem
      temp:
        - place-self: center end
        - padding-right: 0.9rem
        - border-right: 0.1rem solid rgba(var(--primary-text-color-rgb), 0.4)
