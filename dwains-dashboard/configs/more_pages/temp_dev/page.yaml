---
type: custom:dwains-flexbox-card
item_classes: "col-xs-12"
cards:
  - type: custom:layout-card
    item_classes: "col-xs-12"
    layout_type: custom:grid-layout
    layout:
      grid-template-columns: auto auto 25%
      grid-template-rows: auto
      grid-template-areas: |
        "left centre right"
      rtl: true
    cards:
      - icon_color: pink
        icon: mdi:car
        primary: Formula 1 Website â†—
        secondary:
        style: |
          ha-card {background: none !important; box-shadow: none !important;}
        tap_action:
          action: url
          url_path: https://www.formula1.com
        type: custom:mushroom-template-card
        view_layout:
          grid-area: right
          place-self: start right

  - cards:
      - cards:
          - content:
              "![Image](https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/F1.svg/1280px-F1.svg.png)

              "
            type: markdown
          - content:
              "{% set f1 = states.sensor.formula_one_sensor.attributes.next_race %}\
              \ {% if not(f1 == None) %}\n  <h1>{{ f1.raceName }}</h1>\n  <h2>{{f1.Circuit.circuitName}}</h2>\
              \ {% endif %}\n  {{ as_timestamp(f1.date + ' ' + f1.time) | timestamp_custom(\"\
              Race start %d/%m/%Y, %H:%M\") }}</small>&nbsp;&nbsp;\n<a target=\"_new\" href=\"\
              {{f1.Circuit.url}}\">\n  <img width=\"100%\" src=\"https://www.formula1.com/content/dam/fom-website/2018-redesign-assets/Circuit%20maps%2016x9/{{f1.Circuit.Location.country.replace(\"\
              \ \", \"_\")}}_Circuit.png.transform/9col/image.png\">\n</a>"
            type: markdown
        item_classes: col-xs-12 col-sm-3
        type: vertical-stack
      - cards:
          - default: race
            entity: hash
            states:
              race:
                cards:
                  - cards:
                      - cards:
                          - name: Race
                            styles:
                              card:
                                - height: 30px
                                - width: 125px
                              name:
                                - color: var(--dwains-theme-accent)
                                - font-weight: bold
                                - font-size: 16px
                            tap_action:
                              action: navigate
                              navigation_path: "#race"
                            type: custom:button-card
                          - name: Stands
                            styles:
                              card:
                                - height: 30px
                                - width: 125px
                              name:
                                - color: var(--dwains-theme-grey)
                                - font-weight: bold
                                - font-size: 16px
                            tap_action:
                              action: navigate
                              navigation_path: "#stands"
                            type: custom:button-card
                        type: horizontal-stack
                    padding: true
                    type: custom:dwains-flexbox-card
                  - content:
                      '{%- set next_race = state_attr(''sensor.formula_one_sensor'',
                      ''next_race'') %}

                      {%- set races = state_attr(''sensor.formula_one_sensor'', ''races'') %}

                      |Rd|Race|Circuit|Sessions|

                      |:---:|:---|:---|:---|

                      {%- for item in races %}

                      {{item.round}}<br/><br/><br/><br/><br/>|[{{item.raceName}}]({{item.url}})<br/><br/><br/><br/><br/>|[{{item.Circuit.circuitName}}]({{item.Circuit.url}})<br/>{{item.Circuit.Location.locality}},
                      {{item.Circuit.Location.country}}<br/><br/><br/><br/>|{%- if ''ThirdPractice''
                      in item %}P1: {{ as_timestamp(item.FirstPractice.date + '' '' + item.FirstPractice.time)
                      | timestamp_custom("%d %h, %H:%M ") }}</br>P2: {{ as_timestamp(item.SecondPractice.date
                      + '' '' + item.SecondPractice.time) | timestamp_custom("%d %h, %H:%M ")
                      }}</br>P3: {{ as_timestamp(item.ThirdPractice.date + '' '' + item.ThirdPractice.time)
                      | timestamp_custom("%d %h, %H:%M ") }}</br>Q: {{ as_timestamp(item.Qualifying.date
                      + '' '' + item.Qualifying.time) | timestamp_custom("%d %h, %H:%M ") }}</br>R:
                      {{ as_timestamp(item.date + '' '' + item.time) | timestamp_custom("%d
                      %h, %H:%M ") }}</br>|{%- else %}P1: {{ as_timestamp(item.FirstPractice.date
                      + '' '' + item.FirstPractice.time) | timestamp_custom("%d %h, %H:%M ")
                      }}</br>Q: {{ as_timestamp(item.Qualifying.date + '' '' + item.Qualifying.time)
                      | timestamp_custom("%d %h, %H:%M ") }}</br>P2: {{ as_timestamp(item.SecondPractice.date
                      + '' '' + item.SecondPractice.time) | timestamp_custom("%d %h, %H:%M ")
                      }}</br>S: {{ as_timestamp(item.Sprint.date + '' '' + item.Sprint.time)
                      | timestamp_custom("%d %h, %H:%M ") }}</br>R: {{ as_timestamp(item.date
                      + '' '' + item.time) | timestamp_custom("%d %h, %H:%M ") }}</br>|{%- endif
                      %}

                      {%- endfor %}

                      '
                    type: markdown
                    card_mod: !include ../../1_Templates/style_markdowntable.yaml
                type: vertical-stack
              stands:
                cards:
                  - cards:
                      - cards:
                          - name: Race
                            styles:
                              card:
                                - height: 30px
                                - width: 125px
                              name:
                                - color: var(--dwains-theme-grey)
                                - font-weight: bold
                                - font-size: 16px
                            tap_action:
                              action: navigate
                              navigation_path: "#race"
                            type: custom:button-card
                          - name: Stands
                            styles:
                              card:
                                - height: 30px
                                - width: 125px
                              name:
                                - color: var(--dwains-theme-accent)
                                - font-weight: bold
                                - font-size: 16px
                            tap_action:
                              action: navigate
                              navigation_path: "#stands"
                            type: custom:button-card
                        type: horizontal-stack
                    padding: true
                    type: custom:dwains-flexbox-card
                  - content: "### Drivers Championship

                      |#|C|Driver|Team|Points|Wins|

                      |:-:|:-:|:-|:-|:-:|:-:|

                      {%- for driver in state_attr('sensor.formula_one_sensor', 'drivers')
                      %} <tr>

                      |{{driver.position}}|{{driver.Driver.code}}|[{{driver.Driver.givenName
                      }} {{driver.Driver.familyName }} (#{{driver.Driver.permanentNumber}})]({{driver.Driver.url}})|[{{driver.Constructors[0].name}}]({{driver.Constructors[0].url}})|{{driver.points}}|{{driver.wins}}|
                      {%- endfor %}"
                    type: markdown
                  - content: "### Constructors Championship

                      |#|Team|Points|Wins|

                      |:-:|:-|:-:|:-:|

                      {%- for driver in state_attr('sensor.formula_one_sensor', 'constructors')
                      %}

                      |{{driver.position}}|[{{driver.Constructor.name}}]({{driver.Constructor.url}})|{{driver.points}}|{{driver.wins}}|
                      {%- endfor %}"
                    type: markdown
                type: vertical-stack
            type: custom:state-switch
        item_classes: col-xs-12 col-sm-9
        type: vertical-stack
    items_classes: col-xs-12
    type: custom:dwains-flexbox-card
