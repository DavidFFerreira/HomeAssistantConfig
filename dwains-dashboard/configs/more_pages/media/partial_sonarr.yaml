---
type: custom:stack-in-card
mode: vertical
cards:
  - type: entities
    title: Sonarr
    style: !include ../../1_Templates/style_entities.yaml
    entities:
      - entity: sensor.sonarr_shows
        name: Tracked Shows
      - entity: sensor.sonarr_queue
        name: Queued Episodes
      - entity: sensor.sonarr_upcoming
        name: Upcoming Episodes
      - entity: sensor.sonarr_wanted
        name: Wanted Episodes

  - type: markdown
    #card_mod: !include ../../1_Templates/style_markdowntable.yaml
    content: |-
      <table width="100%">
      <tr>
      <th>Date</th>
      <th>Time</th>
      <th>Detail</th>
      </tr>
      {%- for item in state_attr('sensor.sonarr_upcoming_media', 'data') %}
      {%- if item.airdate | default('', true) %}
      {%- set airdate = as_timestamp(item.airdate) | timestamp_custom('%a %b %d') %}
      {%- set airtime = as_timestamp(item.airdate) | timestamp_custom('%H:%M') %}
      <tr>
      <td>{{ airdate }}</td>
      <td>{{ airtime }}</td>
      <td>{{item.title}}: ({{item.number}}, {{item.episode}})</td>
      </tr>
      {%- endif %}{% endfor %}
      </table>
    card_mod:
      style:
        ha-markdown$: |
          th, td { padding: 4px 0 8px; border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.05); }
          th { font-size: var(--h6-font-size); text-align: left; text-transform: uppercase; padding-top: 0 !important; }
          th, td:first-child { color: rgba(var(--rgb-primary-text-color), .5); }
          xth, xtr:last-child td { border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.5) !important; }
