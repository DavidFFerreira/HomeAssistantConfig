# - type: custom:button-card
#   entity: sensor.time
#   show_name: false
#   show_icon: false
#   show_state: true
#   show_label: false
#   show_last_changed: false
#   custom_fields:
#     weather:
#       card:
#         type: custom:button-card
#         show_state: false
#         show_icon: false
#         show_label: false
#         show_name: false
#         show_entity_picture: true
#         # tap_action:
#         #   !include ../../popups/common/weather-forecast.yaml
#         entity: weather.east_tamworth
#         # entity_picture: "[[[ return `/local/img/weather/${states[variables.entity_weather].state}.svg` ]]]"
#         styles:
#           grid:
#             - grid-template-areas: |
#                 "i"
#             - grid-template-columns: 1fr
#             - grid-template-rows: 1fr
#           img_cell:
#             - justify-content: center
#           icon:
#             - width: 4.0rem
#             - height: 3.5rem
#           card:
#             - background-color: transparent
#             - box-shadow: none
#     temp:
#       card:
#         type: custom:button-card
#         show_state: true
#         show_icon: false
#         show_label: false
#         show_name: false
#         entity: sensor.tamworth_airport_temp
#         state_display: |
#           [[[
#             var temperature = states['sensor.tamworth_airport_temp'].state
#             return `<div><span class="value">${temperature}</span><span class="unit">&degC</span></div>`
#           ]]]
#         extra_styles: |
#           span.unit {
#             font-size: 1.4rem;
#           }
#         styles:
#           grid:
#             - grid-template-areas: |
#                 "s"
#             - grid-template-columns: 1fr
#             - grid-template-rows: 1fr
#           state:
#             - justify-self: center
#             - align-self: center
#             - font-weight: 300
#             - font-size: 2rem
#             - filter: "opacity(40%)"
#           card:
#             - background-color: transparent
#             - box-shadow: none
#     date:
#       card:
#         type: custom:button-card
#         show_state: true
#         show_icon: false
#         show_label: false
#         show_name: false
#         entity: sensor.date
#         # state_display: |
#         #   [[[
#         #     var date = states['sensor.date'].state
#         #     var lang = navigator.language || navigator.userLanguage
#         #     const opts = { weekday: 'long', month: 'long', day: 'numeric' }
#         #     return new Intl.DateTimeFormat(lang, opts).format(date)
#         #     return ''
#         #   ]]]
#         styles:
#           grid:
#             - grid-template-areas: |
#                 "s"
#             - grid-template-columns: min-content
#             - grid-template-rows: min-content
#           state:
#             - background-color: transparent
#             - font-size: 1.2rem
#             - justify-self: end
#             - align-self: start
#             - filter: "opacity(40%)"
#           card:
#             - border-radius: 0
#             - background-color: transparent
#             - box-shadow: none
#             - padding: 0 1rem 0 0
#             - border-right: 0.1rem solid rgba(var(--primary-text-color-rgb), 0.4)
#             - justify-self: end
#     styles:
#       grid:
#         - grid-template-areas: '"s weather" "s weather" "s temp" "date temp"'
#         - grid-template-columns: "min-content max-content"
#         - grid-template-rows: "repeat(4, min-content)"
#       state:
#         - font-weight: 200
#         - font-size: 5rem
#         - background-color: transparent
#         - justify-self: end
#         - align-self: end
#         - padding-right: 0.8rem
#         - border-right: 0.1rem solid rgba(var(--primary-text-color-rgb), 0.4)
#       card:
#         - background-color: transparent
#         - border-radius: none
#         - box-shadow: none
#         - width: 100%
#     custom_fields:
#       weather:
#         - place-self: end center
#         - padding-bottom: 0.25rem
#         - margin-left: 0.8rem
#       temp:
#         - place-self: start center
#         - padding-top: 0.25rem
#         - margin-left: 0.8rem
#       date:
#         - align-self: start
#         - justify-self: end

- type: entities
  title: Home Assistant
  show_header_toggle: false
  entities:
    - entity: switch.tbsh1_monitordocker_sonarr
      name: Sonarr
      secondary_info: status
    - type: custom:bar-card
      width: 55%
      height: 2em
      decimal: 0
      unit_of_measurement: "%"
      positions:
        icon: outside
        indicator: "off"
        name: outside
      severity:
        - color: "#6d2525"
          from: 90
          to: 999
      entity_row: true
      entities:
        - entity: sensor.tbsh1_monitordocker_sonarr
          attribute: cpu_percentage
          name: CPU
          icon: mdi:chip

        - entity: sensor.tbsh1_monitordocker_sonarr
          attribute: memory_percentage
          name: Memory
          icon: mdi:memory
- type: custom:apexcharts-card
  layout: minimal
  graph_span: 1h
  apex_config:
    chart:
      height: 135px
    tooltip:
      style:
        fontSize: 14px
      x:
        show: true
        format: dddd HH:mm
    xaxis:
      crosshairs:
        show: false
    legend:
      fontSize: 14px
      fontWeight: 400
      itemMargin:
        horizontal: 25
      # formatter: |
      #   EVAL:(seriesName, opts) => {
      #     var arr = opts.w.globals.series[opts.seriesIndex],
      #       value = arr[arr.length - 1],
      #       convert = (value / 1024).toFixed(2);
      #     if (value == null) {
      #       return seriesName;
      #     } else {
      #       return value < 1024 ? `${Math.round(value)} kB/s` : `${convert} MB/s`;
      #     }
      #   }
      markers:
        width: 26
        height: 23
        customHTML:
          - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-down-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
          - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-up-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
        fillColors:
          - none
          - none
    fill:
      type: gradient
      gradient:
        type: vertical
        opacityFrom: 0.8
        opacityTo: 0
        stops:
          - 0
          - 99
          - 100
    stroke:
      width: 3
  all_series_config:
    type: area
    fill_raw: last
  series:
    - entity: sensor.tbsh1_monitordocker_sonarr
      attribute: network_speed_down
      name: Down
      color: green
    - entity: sensor.tbsh1_monitordocker_sonarr
      attribute: network_speed_up
      name: Up
      color: "#385581"

- type: custom:apexcharts-card
  graph_span: 7d
  span:
    end: day
  header:
    show: true
    title: Rooftop Solar
  apex_config:
    chart:
      {
        type: "area",
        height: 500,
        toolbar: { show: true, tools: { reset: true } },
        zoom: { type: "x", enabled: true, autoScaleYaxis: true },
      }
    stroke: { show: true, curve: smooth }
    legend: { show: true }
    dataLabels: { enabled: false }
    fill:
      {
        type: "gradient",
        gradient:
          {
            shadeIntensity: 1,
            inverseColors: false,
            opacityFrom: 0.45,
            opacityTo: 0.05,
            stops: [20, 100, 100, 100],
          },
      }
    xaxis:
      {
        type: "datetime",
        labels: { datetimeFormatter: { month: "ddd", day: "ddd" } },
      }
  stacked: true
  all_series_config:
    stroke_width: 2
    type: area
    extend_to_end: false
    float_precision: 2
    unit: "MW"
    curve: smooth
    group_by:
      func: last
      duration: 10m
  series:
    - entity: sensor.opennem_nsw
      attribute: solar_rooftop
    - entity: sensor.opennem_qld
      attribute: solar_rooftop
# - type: custom:dwains-flexbox-card
#   items_classes: "col-xs-12 col-sm-6 col-sm-6 col-xl-6"
#   cards:
#     - type: history-graph
#       entities:
#         - sensor.weather_outside_temperature
#         - sensor.weather_outside_temperature_1hint
#         - sensor.weather_outside_temperature_5mint
#       hours_to_show: 24
#       refresh_interval: 120
#     - type: history-graph
#       entities:
#         - sensor.solar_solar_generation
#         - sensor.solar_solar_generation_filtered
#         - sensor.solar_solar_generation_filtered_avg
#       hours_to_show: 24
#       refresh_interval: 120

# - type: custom:dwains-flexbox-card
#   items_classes: "col-xs-12 col-sm-12 col-sm-12 col-xl-12"
#   cards:
#     - type: custom:apexcharts-card
#       header:
#         show: true
#         title: "UniFi WAN Uptime"
#       graph_span: 24h
#       span:
#         start: day
#       apex_config:
#         tooltip:
#           x:
#             format: "ddd dd MMM - HH:mm"
#         xaxis:
#           tooltip:
#             enabled: false
#         grid:
#           borderColor: "#7B7B7B"
#         chart:
#           height: 300
#           foreColor: "#7B7B7B"
#           zoom:
#             type: x
#             enabled: true
#             autoScaleYaxis: true
#           toolbar:
#             show: true
#             autoSelected: zoom
#             tools:
#               zoom: true
#               zoomin: false
#               zoomout: false
#               pan: false
#               reset: true
#       all_series_config:
#         stroke_width: 2
#         type: line
#         extend_to_end: false
#         float_precision: 3
#       series:
#         - entity: sensor.unifi_gateway_wan_uptimeavail
#           unit: "%"
#           name: Uptime

#         - entity: sensor.unifi_gateway_wan_uptimeavail_stats
#           attribute: mean
#           unit: "%"
#           name: Mean

#         - entity: sensor.unifi_gateway_wan_uptimeavail_stats
#           attribute: max_value
#           unit: "%"
#           name: Max

#         - entity: sensor.unifi_gateway_wan_uptimeavail_stats
#           attribute: min_value
#           unit: "%"
#           name: Min

# - type: custom:dwains-flexbox-card
#   items_classes: "col-xs-12 col-sm-12 col-sm-12 col-xl-12"
#   cards:
#     - type: "custom:config-template-card"
#       entities:
#         - sensor.sunrise
#         - sensor.sunset
#         - sensor.weather_outside_uvindex
#         - sensor.weather_outside_radiation
#       card:
#         type: "custom:apexcharts-card"
#         header:
#           show: true
#           show_states: true
#           colorize_states: true
#           title: UV Index and Radiation
#         span:
#           start: day
#         graph_span: 24h
#         all_series_config:
#           stroke_width: 2
#           type: line
#           extend_to_end: false
#           float_precision: 0
#         color_list:
#           - orange
#           - green
#         series:
#           - entity: sensor.weather_outside_uvindex
#             name: UV Index
#             group_by:
#               func: avg
#               duration: 10min
#           - entity: sensor.weather_outside_radiation
#             name: Radiation
#             group_by:
#               func: avg
#               duration: 10min
#         apex_config:
#           annotations:
#             xaxis:
#               - x: "${new Date(states['sensor.sunrise'].state).getTime()}"
#                 label:
#                   text: ☼
#                   borderWidth: 0
#                   style:
#                     background: "#0000"
#               - x: "${new Date(states['sensor.sunset'].state).getTime()}"
#                 label:
#                   text: ☾
#                   borderWidth: 0
#                   style:
#                     background: "#0000"
#           yaxis:
#             - seriesName: UV Index
#               decimalsInFloat: 0
#             - seriesName: Radiation
#               decimalsInFloat: 0
#               opposite: true
#           tooltip:
#             x:
#               format: "ddd dd MMM - HH:mm"
#           xaxis:
#             tooltip:
#               enabled: false
#           legend:
#             show: false
#           grid:
#             borderColor: "#7B7B7B"
#           chart:
#             height: 300
#             foreColor: "#7B7B7B"
#             zoom:
#               type: x
#               enabled: true
#               autoScaleYaxis: true
#             toolbar:
#               show: true
#               autoSelected: zoom
#               tools:
#                 zoom: true
#                 zoomin: false
#                 zoomout: false
#                 pan: false
#                 reset: true
# - type: custom:apexcharts-card
#   graph_span: 48h1s
#   header:
#     show: true
#     title: "Dark Sky Forecast - Tamworth Airport"
#   span:
#     start: hour
#     offset: -1s
#   apex_config:
#     chart: { type: "area", height: 300 }
#     stroke: { show: true, lineCap: "square", dashArray: [0, 10] }
#     legend: { show: false }
#     fill:
#       {
#         type: "gradient",
#         gradient:
#           {
#             shadeIntensity: 1,
#             inverseColors: false,
#             opacityFrom: 0.45,
#             opacityTo: 0.05,
#             stops: [20, 100, 100, 100],
#           },
#       }
#     xaxis:
#       {
#         type: "datetime",
#         labels: { datetimeFormatter: { month: "ddd", day: "ddd" } },
#       }
#     yaxis:
#       - seriesName: "Temp"
#         title:
#           text: "Temperature (°C)"
#       - seriesName: "Rainfall"
#         title:
#           text: "Rainfall (mm)"
#         min: 0
#         opposite: true

#   series:
#     - entity: weather.dark_sky
#       name: Temperature
#       type: area
#       color: "#121619"
#       extend_to_end: false
#       stroke_width: 3
#       unit: "°C"
#       data_generator: |
#         return entity.attributes.forecast.map((entry) => {
#           return [new Date(entry.datetime), entry.temperature];
#         });
#       group_by:
#         func: last
#         duration: 1h
#     - entity: weather.dark_sky
#       name: Rainfall
#       type: area
#       color: "#1192e8"
#       extend_to_end: false
#       stroke_width: 2
#       unit: "mm"
#       curve: stepline
#       data_generator: |
#         return entity.attributes.forecast.map((entry) => {
#           return [new Date(entry.datetime), entry.precipitation || 0];
#         });
#       group_by:
#         func: last
#         duration: 1h

#     - type: custom:apexcharts-card
#       graph_span: 14d12h
#       header:
#         show: true
#         title: "Climacell Daily Forecast - Tamworth Airport"
#       span:
#         start: day
#         offset: -6h
#       apex_config:
#         chart: { type: "area", height: 300 }
#         stroke: { show: true, lineCap: "square", dashArray: [10, 0, 0] }
#         dataLabels: { enabled: true }
#         legend: { show: false }
#         fill:
#           {
#             type: "gradient",
#             gradient:
#               {
#                 shadeIntensity: 1,
#                 inverseColors: false,
#                 opacityFrom: 0.45,
#                 opacityTo: 0.05,
#                 stops: [20, 100, 100, 100],
#               },
#           }
#         xaxis:
#           {
#             type: "datetime",
#             labels: { datetimeFormatter: { month: "ddd", day: "ddd" } },
#           }
#         yaxis:
#           - seriesName: "Rainfall"
#             decimalsInFloat: 0
#             title:
#               text: "Rainfall (mm)"
#             min: 0
#             opposite: true
#           - seriesName: "High"
#             decimalsInFloat: 0
#             title:
#               text: "Temperature (°C)"
#           - seriesName: "High"
#             show: false

#       series:
#         - entity: weather.climacell_daily
#           name: Rainfall
#           type: area
#           color: "#1192e8"
#           extend_to_end: false
#           stroke_width: 2
#           unit: "mm"
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.precipitation];
#             });
#         - entity: weather.climacell_daily
#           name: High
#           type: area
#           color: "da1e28"
#           extend_to_end: false
#           stroke_width: 3
#           unit: "°C"
#           show:
#             datalabels: true
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.temperature];
#             });
#         - entity: weather.climacell_daily
#           name: Low
#           type: area
#           color: "#0043ce"
#           extend_to_end: false
#           stroke_width: 3
#           unit: "°C"
#           show:
#             datalabels: true
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.templow];
#             });

#     - type: custom:apexcharts-card
#       graph_span: 24h30min
#       header:
#         show: true
#         title: "Climacell Hourly Forecast - Tamworth Airport"
#       span:
#         start: hour
#         offset: -30min
#       apex_config:
#         chart: { type: "area", height: 300 }
#         stroke: { show: true, lineCap: "square", dashArray: [10, 0, 0] }
#         dataLabels: { enabled: true }
#         legend: { show: false }
#         fill:
#           {
#             type: "gradient",
#             gradient:
#               {
#                 shadeIntensity: 1,
#                 inverseColors: false,
#                 opacityFrom: 0.45,
#                 opacityTo: 0.05,
#                 stops: [20, 100, 100, 100],
#               },
#           }
#         xaxis:
#           {
#             type: "datetime",
#             labels: { datetimeFormatter: { month: "ddd", day: "ddd" } },
#           }
#         yaxis:
#           - seriesName: "Rainfall"
#             decimalsInFloat: 0
#             title:
#               text: "Rainfall (mm)"
#             min: 0
#             opposite: true
#           - seriesName: "High"
#             decimalsInFloat: 0
#             title:
#               text: "Temperature (°C)"
#           - seriesName: "Prob"
#             title:
#               text: "Rain Probability (%)"
#             show: true
#             min: 0
#             max: 100
#             decimalsInFloat: 0
#             opposite: true

#       series:
#         - entity: weather.climacell_hourly
#           name: Rainfall
#           type: area
#           color: "#1192e8"
#           extend_to_end: false
#           stroke_width: 2
#           unit: "mm"
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.precipitation];
#             });
#         - entity: weather.climacell_hourly
#           name: High
#           type: area
#           color: "da1e28"
#           extend_to_end: false
#           stroke_width: 3
#           unit: "°C"
#           show:
#             datalabels: true
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.temperature];
#             });
#         - entity: weather.climacell_hourly
#           name: Low
#           type: area
#           color: "#0043ce"
#           extend_to_end: false
#           stroke_width: 3
#           unit: "%"
#           data_generator: |
#             return entity.attributes.forecast.map((entry) => {
#               return [new Date(entry.datetime), entry.precipitation_probability];
#             });
