substitutions:
  esp_name: "waveshare-eink"
  ip_address: 192.168.1.198
  ip_gw: 192.168.1.1
  ip_netmask: 255.255.255.0

esphome:
  name: ${esp_name}

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  - source:
      type: git
      url: https://github.com/atomicmike/esphome.git
      ref: waveshare-color-2022.6
    components: [waveshare_epaper]

logger:

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: ${ip_gw}
    subnet: ${ip_netmask}

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-Dd96F4"
    password: "glu23pmoBYMF"

captive_portal:

web_server:
  port: 80
  include_internal: true

time:
  - platform: homeassistant
    timezone: Australia/Sydney
    id: current_time
    on_time_sync:
      - component.update: uptime_timestamp

switch:
  - platform: restart
    name: "${esp_name} Restart"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${esp_name} IP Address"
      id: ip_address
      icon: mdi:wifi
      entity_category: diagnostic
    ssid:
      name: "${esp_name} Connected SSID"
      id: ssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic
    bssid:
      name: "${esp_name} Connected BSSID"
      id: bssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic

  - platform: template
    name: "${esp_name} Uptime"
    id: uptime_human
    icon: mdi:clock-start

  - platform: version
    name: "${esp_name} ESPHome Version"
    entity_category: diagnostic

sensor:
  - platform: uptime
    name: "${esp_name} Uptime Sec"
    id: uptime_sec
    internal: true

  - platform: wifi_signal
    name: "${esp_name} WiFi Signal"
    id: wifisignal
    update_interval: 60s

  - platform: template
    id: uptime_timestamp
    name: "${esp_name}  Uptime"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: 10s
    lambda: |-
      static float timestamp = (
        id(current_time).utcnow().timestamp - id(uptime_sec).state
      );
      return timestamp;

font:
  - file: "fonts/GoogleSans-Medium.ttf"
    id: main_sensor_unit
    size: 35
  - file: "fonts/GoogleSans-Bold.ttf"
    id: font_small_bold
    size: 18

color:
  - id: color_black
    red: 0%
    green: 0%
    blue: 0%
    white: 50%
  - id: color_white
    red: 0%
    green: 0%
    blue: 0%
    white: 0%
  - id: color_red
    red: 100%
    green: 0%
    blue: 0%
    white: 0%
spi:
  clk_pin: GPIO13
  mosi_pin: GPIO14

display:
  - platform: waveshare_epaper
    cs_pin: GPIO15
    dc_pin: GPIO27
    busy_pin: GPIO25
    reset_pin: GPIO26
    model: 7.50inV2
    update_interval: 1min
    reset_duration: 2ms
    rotation: 90Â°
    lambda: |-
      it.fill(color_black);
      it.print(10,10,id(main_sensor_unit), "Hello, World!");
      it.print(150, 536, id(font_small_bold), color_white, TextAlign::TOP_CENTER, "TO MANHATTAN");
      it.print(330, 536, id(font_small_bold), color_white, TextAlign::TOP_CENTER, "TO CANARSIE");
