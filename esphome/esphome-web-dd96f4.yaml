substitutions:
  esp_name: "waveshare-eink"
  ip_address: 192.168.1.201
  ip_gw: 192.168.1.1
  ip_netmask: 255.255.255.0
  gpio_spi_clk_pin: GPIO13
  gpio_spi_mosi_pin: GPIO14
  gpio_cs_pin: GPIO15
  gpio_dc_pin: GPIO27
  gpio_reset_pin: GPIO26
  gpio_busy_pin: GPIO25
  
esphome:
  name: "waveshare-eink"
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: ${ip_gw}
    subnet: ${ip_netmask}

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-Dd96F4"
    password: "glu23pmoBYMF"

captive_portal:

web_server:
  port: 80
  include_internal: true

time:
  - platform: homeassistant
    timezone: Australia/Sydney  
    id: current_time
    on_time_sync:
      - component.update: uptime_timestamp
    
switch:
  - platform: restart
    name: "${esp_name} Restart"    
    
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${esp_name} IP Address"
      id: ip_address
      icon: mdi:wifi
      entity_category: diagnostic
    ssid:
      name: "${esp_name} Connected SSID"
      id: ssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic
    bssid:
      name: "${esp_name} Connected BSSID"
      id: bssid
      icon: mdi:wifi-strength-2
      entity_category: diagnostic

  - platform: template
    name: "${esp_name} Uptime"
    id: uptime_human
    icon: mdi:clock-start    

  - platform: version
    name: "${esp_name} ESPHome Version"
    entity_category: diagnostic
    
sensor:
  - platform: uptime
    name: "${esp_name} Uptime Sec"
    id: uptime_sec
    internal: true

  - platform: template
    id: uptime_timestamp
    name: "${esp_name}  Uptime"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(current_time).utcnow().timestamp - id(uptime_sec).state
      );
      return timestamp;    
    
spi:
  clk_pin: $gpio_spi_clk_pin
  mosi_pin: $gpio_spi_mosi_pin
  id: epaper_display
    
font:
  - file: "fonts/GoogleSans-Medium.ttf"
    id: main_sensor_unit
    size: 20
    glyphs: |-
      !"%()+=,-_.:°/|0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'

display:
  - platform: waveshare_epaper
    id: epaperdisplay
    cs_pin: $gpio_cs_pin
    busy_pin: $gpio_busy_pin
    reset_pin: $gpio_reset_pin
    dc_pin: $gpio_dc_pin
    model: 7.50inV2alt
    update_interval: 10s
    reset_duration: 2ms
    rotation: 0°
    lambda: |-

      static const char* TAG = "epaperdisplay";
      ESP_LOGD(TAG, "Writing to e-ink display");

      it.print(775, 17, id(main_sensor_unit), TextAlign::BASELINE_RIGHT, "E-Paper is awesome!");
      it.print(0, 460, id(main_sensor_unit), "E-Paper is awesome!");
      
