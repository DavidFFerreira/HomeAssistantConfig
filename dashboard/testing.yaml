title: Test
path: Test
theme: "Fluent Red"

type: "custom:grid-layout"
layout: !include snippets/layout-page-margin.yaml

cards:
  - type: "custom:layout-card"
    layout_type: "custom:grid-layout"
    view_layout:
      grid-area: cc
    layout:
      grid-template-columns: "repeat(auto-fill, [col-start] minmax(700px, 1fr) [col-end])"
      grid-template-rows: auto
      grid-column-gap: 32px
      margin: -1px
      mediaquery:
        "(max-width: 800px)":
          grid-template-columns: "repeat(auto-fill, [col-start] minmax(256px, 1fr) [col-end])"

    cards:
      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout: !include snippets/layout-page-title.yaml
        view_layout:
          grid-column: 1/-1
        cards:
          - type: markdown
            content: >
              # Network
              The Internet is {{ states('binary_sensor.ping_cloudflare') }}
              and {{ states('sensor.asuswrt_devices_connected') }} devices
              are connected.{%- if states('sensor.speedtest_download') !=
              'unavailable' -%}{{ ' ' }}The speed is {{ iif(
              states('sensor.speedtest_download')|int >= 22, 'normal',
              'slower than usual') }}.{%- endif -%}

      - type: custom:stack-in-card
        mode: vertical
        cards:
          - type: entities
            title: Sonarr
            # style: !include ../../1_Templates/style_entities.yaml
            entities:
              - entity: sensor.sonarr_shows
                name: Tracked Shows
              - entity: sensor.sonarr_queue
                name: Queued Episodes
              - entity: sensor.sonarr_upcoming
                name: Upcoming Episodes
              - entity: sensor.sonarr_wanted
                name: Wanted Episodes
          - card_mod:
              style:
                ha-markdown: >
                  ha-card.type-markdown { box-shadow: none;  margin-top: 8px; overflow-y: scroll; height: 450px; }

                ha-markdown$:
                  "th, td { padding: 4px 0 8px; border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.05);
                  }

                  th { font-size: var(--h6-font-size); text-align: left; text-transform: uppercase;
                  padding-top: 0 !important; }

                  th, td:first-child { color: rgba(var(--rgb-primary-text-color), .5); }

                  xth, xtr:last-child td { border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.5)
                  !important; }

                  "
            content:
              "<ha-alert alert-type=\"error\">This is an error alert \u2014 check it\
              \ out!</ha-alert>\n<ha-alert alert-type=\"warning\">This is a warning alert \u2014\
              \ check it out!</ha-alert>\n<ha-alert alert-type=\"info\">This is an info alert\
              \ \u2014 check it out!</ha-alert>\n<ha-alert alert-type=\"success\">This is a\
              \ success alert \u2014 check it out!</ha-alert>\n<ha-alert title=\"Test alert\"\
              >This is an alert with a title</ha-alert>\n<table width=\"100%\">\n<tr>\n<th>Date</th>\n\
              <th>Time</th>\n<th>Detail</th>\n</tr>\n{%- for item in state_attr('sensor.sonarr_upcoming_media',\
              \ 'data') %}\n{%- if item.airdate | default('', true) %}\n{%- set airdate = as_timestamp(item.airdate)\
              \ | timestamp_custom('%a %b %d') %}\n{%- set airtime = as_timestamp(item.airdate)\
              \ | timestamp_custom('%H:%M') %}\n<tr>\n<td>{{ airdate }}</td>\n<td>{{ airtime\
              \ }}</td>\n<td>{{item.title}}<br/><span style=\"font-size: smaller;\">({{item.number}}, {{item.episode}})</span></td>\n</tr>\n\
              {%- endif %}{% endfor %}\n</table>"
            type: markdown
